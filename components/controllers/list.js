// Generated by CoffeeScript 1.4.0
(function() {
  var ListController,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ListController = (function(_super) {

    __extends(ListController, _super);

    ListController.prototype.elements = {
      "footer a:first-child": "pendientes",
      "footer a:last-child": "finalizadas"
    };

    function ListController() {
      this.bindTaskChange = __bind(this.bindTaskChange, this);

      this.bindTaskCreate = __bind(this.bindTaskCreate, this);
      ListController.__super__.constructor.apply(this, arguments);
      __Model.Task.bind("create", this.bindTaskCreate);
      __Model.Task.bind("change", this.bindTaskChange);
    }

    ListController.prototype.bindTaskCreate = function(task) {
      var view;
      view = new __View.Task({
        model: task
      });
      return view.append(task);
    };

    ListController.prototype.bindTaskChange = function(task) {
      Lungo.Element.count("#c1", __Model.Task.pending().length);
      return Lungo.Element.count("#c2", __Model.Task.finished().length);
    };

    return ListController;

  })(Monocle.Controller);

  __Controller.List = new ListController("section#task");

}).call(this);
